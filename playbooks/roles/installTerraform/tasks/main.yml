---
- name: creating subdirectory for terraform provider
  file:
    path: "{{ item }}"
    mode: 0700
    recurse: yes
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_id }}"
  with_items:
    - "{{ lookup('env','HOME') }}/.terraform.d/plugins/"
    - "{{ lookup('env','HOME') }}/bin/"

- name: creating temporary file dir
  file:
    path: "{{ role_path }}/files/"
    mode: 0775
    recurse: yes
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_id }}"

- name: Download terraform with check (sha256) and terraform-provider-libvirt
  get_url:
    url: "{{ item.src }}"
    dest: "{{ item.dst }}"
    checksum: "{{ item.cks | default(omit) }}"
    owner: "{{ ansible_user_id }}" 
    group: "{{ ansible_user_id }}"
    mode: 0600
  with_items:
    - { src: "{{ roleVarTerraformDownload }}", dst: "{{ role_path }}/files/{{ roleVarTerraformDownload | basename }}", cks: "{{ roleVarTerraformDownloadChecksum }}" }
    - { src: "{{ roleVarTerraformProviderLibvirtDownload }}", dst: "{{ role_path }}/files/{{ roleVarTerraformProviderLibvirtDownload | basename }}" }

- name: Extract terraform and terraform-provider-libvirt
  unarchive:
    src: "{{ item.src }}"
    dest: "{{ item.dst }}"
    mode: 0700
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_id }}"
  with_items:
    - { src: "{{ role_path }}/files/{{ roleVarTerraformDownload | basename }}", dst: "{{ lookup('env','HOME') }}/bin/" }
    - { src: "{{ role_path }}/files/{{ roleVarTerraformProviderLibvirtDownload | basename }}", dst: "{{ lookup('env','HOME') }}/.terraform.d/plugins/" }

- name: deleting zipfile of terraform and terraform-provider-libvirt
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "{{ role_path }}/files/{{ roleVarTerraformDownload | basename }}"
    - "{{ role_path }}/files/{{ roleVarTerraformProviderLibvirtDownload | basename }}"
...
